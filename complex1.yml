---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# complex1
# https://cloud.redhat.com/insights/remediations/cb51f561-8cdd-4515-89b0-93d5105df1d7
# Generated by Red Hat Insights on Thu, 16 Apr 2020 19:50:41 GMT
# Created by fran.robles@expertice.com.ar

- name: run insights to obtain latest diagnosis info
  hosts: "rek.expertice.local"
  become: True
  tasks:
    - name: obtain diagnosis info
      shell: 'insights-client --diagnosis cb51f561-8cdd-4515-89b0-93d5105df1d7'
      register: insights_result
      changed_when: false
      check_mode: false
    - name: register insights report as fact for use by other plays
      set_fact: insights_report={{ insights_result.stdout }}

# CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, CVE-2019-11091: &quot;MDS&quot; CPU side-channel
# Identifier: (advisor:CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_NEED_UPDATE,update)
# Version: 729be48a38fabe5d895a422e3b47f74d85b01603
# Playbook for CVE_2018_12130_CPU_KERNEL_NEED_UPDATE
- name: Apply updates for CVE-2018-12130/12126/12127/2019-11091
  hosts: "rek.expertice.local"
  become: true
  vars:
    pydata: "{{insights_report.details['CVE_2018_12130_cpu_kernel|CVE_2018_12130_CPU_KERNEL_NEED_UPDATE'] | default('')}}"
  tasks:
    - when: pydata != ''
      block:
        - name: Update kernel
          when: not pydata.rt
          yum:
            name: kernel
            state: latest

        - name: Update kernel (rt)
          when: pydata.rt
          yum:
            name: kernel-rt
            state: latest

        - name: Find latest installed kernel
          shell: yum list kernel | tail -1 | awk '{ print $2 }' warn=False
          register: latest_kernel

        - name: Get current default kernel
          command: grubby --default-kernel
          register: grubby_default

        - when: latest_kernel.stdout not in grubby_default.stdout
          command: grubby --set-default={{ grubby_default.stdout | regex_replace('\d\.\d+\.\d+.*el\d', latest_kernel.stdout)}}

        # pbtest reboot
        - name: Reboot
          set_fact:
            insights_needs_reboot: True


# CVE-2019-11135: &quot;TAA&quot; kernel side-channel
# Identifier: (advisor:CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL,update)
# Version: f274cacbb44d0ecad45232fcc0b66b58e26095d3
# Playbook for CVE_2019_11135_CPU_TAA_KERNEL
- name: Apply updates for CVE-2019-11135
  hosts: "rek.expertice.local"
  become: true
  vars:
    pydata: "{{ insights_report.details['CVE_2019_11135_cpu_taa|CVE_2019_11135_CPU_TAA_KERNEL'] | default('') }}"
    # determine if we need to update the 'kernel' package or 'kernel-rt' package
    kernel_pkg: "{{ 'kernel-rt' if 'rt' in ansible_kernel else 'kernel' }}"
  tasks:
    - when: pydata != ''
      block:
        - name: Update kernel
          yum:
            name: "{{ kernel_pkg }}"
            state: latest

        - name: Update microcode
          yum:
            name: microcode_ctl
            state: latest

        - name: Find latest installed kernel
          shell: yum list {{ kernel_pkg }} | tail -1 | awk '{ print $2 }' warn=False
          register: latest_kernel

        - name: Get current default kernel
          command: grubby --default-kernel
          register: grubby_default

        - name: Set the latest installed kernel as the default kernel
          when: latest_kernel.stdout not in grubby_default.stdout
          command: grubby --set-default={{ grubby_default.stdout | regex_replace('\d\.\d+\.\d+.*el\d', latest_kernel.stdout) }}

        # pbtest reboot
        - name: Reboot
          set_fact:
            insights_needs_reboot: True


# CVE-2019-11477, CVE-2019-11478, CVE-2019-11479: &quot;Sack Panic&quot; kernel denial of service
# Identifier: (advisor:CVE_2019_11477_kernel|CVE_2019_11477_KERNEL,mitigate)
# Version: dda935285741df6956e5d7a3b97a8b5c0b8b3d9a
#
# TCP SACK PANIC Mitigation Playbook v1.0
#
# To completely address TCP SACK PANIC vulnerabilities, you will need to update your kernel.
# However, if you are unable to reboot your system into a new kernel immediately, disabling
# selective acknowledgments for the running system will reduce the system's attack surface
# for this issue.
#
# This playbook will disable selective acknowledgments system wide for all newly
# established TCP connections for the running system, create a file
# /etc/sysctl.d/99-tcpsack.conf to disable selective acknowledgmentsat boot time.
# The playbook will not reboot the system. A reboot is not necessary for mitigation.
#
# To verify the state of your system after rebooting, you can inspect the file
# located at /proc/sys/net/ipv4/tcp_sack, or you can run the detection script
# available on the "Diagnose" tab of the vulnerability article.
#
# To use this playbook, specify the host group or individual hostnames with the "HOSTS"
# extra var:
#
#   ansible-playbook -e HOSTS=web,mail,ldap04 disable_tcpsack_mitigate.yml
#
# See https://access.redhat.com/security/vulnerabilities/tcpsack for more information.
#
- name: Disable selective acknowledgments for the running system
  hosts: "rek.expertice.local"
  become: true

  tasks:
    - name: Set net.ipv4.tpc_sack to 0
      sysctl:
        name: net.ipv4.tcp_sack
        value: '0'
        sysctl_set: yes
        state: present
        reload: yes
        sysctl_file: /etc/sysctl.d/99-tcpsack.conf


# System performance declines when the microcode and security patches to mitigate the CPU vulnerabilities CVE-2017-5754, CVE-2017-5715 and CVE-2017-5753 are used without retpoline
# Identifier: (advisor:performance_degradation_spectre_v2|PERFORMANCE_DEGRADATION_SPECTRE_V2,fix)
# Version: 63e61382ae929dd0e6a55f02c0ec678abf254d03
- name: Enable retpoline by grubby args of spectre_v2=retpoline
  hosts: "rek.expertice.local"
  become: true
  vars:
    pydata: "{{insights_report.details['performance_degradation_spectre_v2|PERFORMANCE_DEGRADATION_SPECTRE_V2'] | default('')}}"
  tasks:
    - when: ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7" or ansible_distribution_major_version == "8"
      block:
        - name: add retpoline by grubby command
          command: grubby --args "spectre_v2=retpoline" --update-kernel /boot/vmlinuz-{{pydata.affected_kernel}}
          register: result

        - when: result.rc == 0
          name: set reboot fact
          set_fact:
              insights_needs_reboot: True


# Automatic system reboot was suppressed for this playbook.
# This play lists the systems that need to be rebooted manually for the changes to take effect.
- name: Reboot reminder
  hosts: "rek.expertice.local"
  gather_facts: False
  tasks:
    - debug:
        msg: "Automatic system reboot was suppressed for this playbook. Reboot {{inventory_hostname}} manually for the changes to take effect."
      when:
        - insights_needs_reboot is defined
        - insights_needs_reboot

- name: run insights
  hosts: "rek.expertice.local"
  become: True
  gather_facts: False
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false
